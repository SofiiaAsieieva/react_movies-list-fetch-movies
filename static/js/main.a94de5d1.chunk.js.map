{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/findMovieApi.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","input","setInput","setMovie","wasMovieFound","setWasMovieFound","isFindMovie","setIsFindMovie","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","ClassNames","value","onChange","target","inputChangeHandler","onClick","fetch","then","response","json","catch","e","Response","Title","Plot","Poster","imdbID","App","state","data","some","addedMovie","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a94de5d1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport ClassNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/findMovieApi';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [input, setInput] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [wasMovieFound, setWasMovieFound] = useState(false);\n  const [isFindMovie, setIsFindMovie] = useState(false);\n\n  const inputChangeHandler = (event) => {\n    setInput(event.target.value);\n    setIsFindMovie(false);\n  };\n\n  const addingMovie = () => {\n    getMovie(input).then((response) => {\n      if (response.Response === 'False' || input === '') {\n        setIsFindMovie(true);\n      } else {\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster,\n          imdbUrl: 'https://www.imdb.com/title/tt1375666',\n          imdbId: response.imdbID,\n        });\n        setWasMovieFound(true);\n        setInput('');\n      }\n    });\n  };\n\n  const addToTheList = () => {\n    setWasMovieFound(false);\n    addMovie(movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', { 'is-danger': isFindMovie })}\n              value={input}\n              onChange={event => inputChangeHandler(event)}\n            />\n          </div>\n\n          {isFindMovie && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={addingMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToTheList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {wasMovieFound && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=66d63ac4';\n\nexport function getMovie(title) {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => response.json())\n    .catch(e => e);\n  // .catch(error => throw new Error(`${error}`));\n  // Выдаёт ошибку https://prnt.sc/115poqe\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const isNewMovie = this.state.movies\n      .some(addedMovie => addedMovie.title === movie.title);\n\n    if (!isNewMovie) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}